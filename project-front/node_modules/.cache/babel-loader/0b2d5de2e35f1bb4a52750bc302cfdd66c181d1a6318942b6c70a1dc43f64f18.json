{"ast":null,"code":"var _jsxFileName = \"/home/antoine/Documents/Epitech/epitech-hub-website-project/project-front/src/FormContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormContext = /*#__PURE__*/createContext(undefined);\nexport const FormProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [formState, setFormState] = useState({\n    context: '',\n    goal: '',\n    description: '',\n    steps: []\n  });\n  const updateForm = data => {\n    setFormState(prevState => ({\n      ...prevState,\n      ...data\n    }));\n  };\n  const handleSubmit = async () => {\n    try {\n      //replace with your endpoint\n      const response = await fetch('http://localhost:4000/api/endpoint', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formState)\n      });\n      const data = await response.json();\n      console.log('Server response:', data);\n    } catch (error) {\n      console.error('Error sending data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(FormContext.Provider, {\n    value: {\n      ...formState,\n      updateForm\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(FormProvider, \"oc+BOjOj8r222nMYOsQNxHNnbYk=\");\n_c = FormProvider;\nexport const useForm = () => {\n  _s2();\n  const context = React.useContext(FormContext);\n  if (!context) {\n    throw new Error('useForm must be used within a FormProvider');\n  }\n  return context;\n};\n_s2(useForm, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"FormProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","FormContext","undefined","FormProvider","_ref","_s","children","formState","setFormState","context","goal","description","steps","updateForm","data","prevState","handleSubmit","response","fetch","method","headers","body","JSON","stringify","json","console","log","error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useForm","_s2","useContext","Error","$RefreshReg$"],"sources":["/home/antoine/Documents/Epitech/epitech-hub-website-project/project-front/src/FormContext.tsx"],"sourcesContent":["import React, { createContext, useState, ReactNode } from 'react';\n\ninterface Step {\n    name: string;\n    duration: string;\n    xp: string;\n}\n\ninterface FormState {\n    context: string;\n    goal: string;\n    description: string;\n    steps: Step[];\n}\n\ntype FormContextType = FormState & {\n  updateForm: (data: Partial<FormState>) => void;\n};\n\nconst FormContext = createContext<FormContextType | undefined>(undefined);\n\nexport const FormProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n    const [formState, setFormState] = useState<FormState>({\n        context: '',\n        goal: '',\n        description: '',\n        steps: [],\n    });\n\n    const updateForm = (data: Partial<FormState>) => {\n        setFormState((prevState) => ({\n            ...prevState,\n            ...data,\n        }));\n    };\n    const handleSubmit = async () => {\n        try {\n            //replace with your endpoint\n            const response = await fetch('http://localhost:4000/api/endpoint', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(formState),\n            });\n\n            const data = await response.json();\n            console.log('Server response:', data);\n        } catch (error) {\n            console.error('Error sending data:', error);\n        }\n    };\n\n    return (\n        <FormContext.Provider value={{ ...formState, updateForm }}>\n            {children}\n        </FormContext.Provider>\n    );\n};\n\nexport const useForm = (): FormContextType => {\n    const context = React.useContext(FormContext);\n    if (!context) {\n        throw new Error('useForm must be used within a FormProvider');\n    }\n    return context;\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAmB,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAmBlE,MAAMC,WAAW,gBAAGJ,aAAa,CAA8BK,SAAS,CAAC;AAEzE,OAAO,MAAMC,YAA+C,GAAGC,IAAA,IAAkB;EAAAC,EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACxE,MAAM,CAACG,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAY;IAClDW,OAAO,EAAE,EAAE;IACXC,IAAI,EAAE,EAAE;IACRC,WAAW,EAAE,EAAE;IACfC,KAAK,EAAE;EACX,CAAC,CAAC;EAEF,MAAMC,UAAU,GAAIC,IAAwB,IAAK;IAC7CN,YAAY,CAAEO,SAAS,KAAM;MACzB,GAAGA,SAAS;MACZ,GAAGD;IACP,CAAC,CAAC,CAAC;EACP,CAAC;EACD,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACA;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;QAC/DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAChB,SAAS;MAClC,CAAC,CAAC;MAEF,MAAMO,IAAI,GAAG,MAAMG,QAAQ,CAACO,IAAI,CAAC,CAAC;MAClCC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEZ,IAAI,CAAC;IACzC,CAAC,CAAC,OAAOa,KAAK,EAAE;MACZF,OAAO,CAACE,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC/C;EACJ,CAAC;EAED,oBACI3B,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IAACC,KAAK,EAAE;MAAE,GAAGtB,SAAS;MAAEM;IAAW,CAAE;IAAAP,QAAA,EACrDA;EAAQ;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAC5B,EAAA,CArCWF,YAA+C;AAAA+B,EAAA,GAA/C/B,YAA+C;AAuC5D,OAAO,MAAMgC,OAAO,GAAGA,CAAA,KAAuB;EAAAC,GAAA;EAC1C,MAAM3B,OAAO,GAAGb,KAAK,CAACyC,UAAU,CAACpC,WAAW,CAAC;EAC7C,IAAI,CAACQ,OAAO,EAAE;IACV,MAAM,IAAI6B,KAAK,CAAC,4CAA4C,CAAC;EACjE;EACA,OAAO7B,OAAO;AAClB,CAAC;AAAC2B,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}