{"ast":null,"code":"var _jsxFileName = \"/home/antoine/Documents/Epitech/epitech-hub-website-project/project-front/src/ProjectList/ProjectList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport ProjectView from '../ProjectView/ProjectView';\nimport './ProjectList.css';\nimport { getProjects, updateProject } from '../Api/TestApi'; // TODO: Replace with real API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction dateToString(date) {\n  return `${date.getDate()}/${date.getMonth()}/${date.getFullYear()}`;\n}\nconst ProjectList = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [preview, setPreview] = useState(null);\n  useEffect(() => {\n    setPreview(null);\n    getProjects().then(projectsData => {\n      if (projectsData) {\n        setProjects(projectsData);\n      }\n      setLoaded(true);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!loaded && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }, this), loaded && !preview && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ProjectList\",\n      children: [projects.map((project, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: project.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"D\\xE9but\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: dateToString(project.startDate)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Fin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: dateToString(project.endDate)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          onClick: () => {\n            setPreview(project);\n          },\n          children: \"Aper\\xE7u\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button\",\n          onClick: () => {\n            updateProject(project).then(projectsData => {\n              if (projectsData) {\n                setProjects(projectsData);\n              }\n            });\n          },\n          children: \"Fin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"button\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Retour\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 36\n    }, this), loaded && preview && /*#__PURE__*/_jsxDEV(ProjectView, {\n      project: preview,\n      setProject: setPreview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true);\n};\n_s(ProjectList, \"Le0So7xZ3LPFLNwIH8M8y7TB020=\");\n_c = ProjectList;\nexport default ProjectList;\nvar _c;\n$RefreshReg$(_c, \"ProjectList\");","map":{"version":3,"names":["React","useEffect","useState","Link","ProjectView","getProjects","updateProject","jsxDEV","_jsxDEV","Fragment","_Fragment","dateToString","date","getDate","getMonth","getFullYear","ProjectList","_s","projects","setProjects","loaded","setLoaded","preview","setPreview","then","projectsData","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","project","i","name","startDate","endDate","onClick","to","setProject","_c","$RefreshReg$"],"sources":["/home/antoine/Documents/Epitech/epitech-hub-website-project/project-front/src/ProjectList/ProjectList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Project } from '../Interfaces/Interfaces';\nimport ProjectView from '../ProjectView/ProjectView';\nimport './ProjectList.css';\nimport { getProjects, updateProject } from '../Api/TestApi'; // TODO: Replace with real API\n\nfunction dateToString(date: Date): string {\n    return `${date.getDate()}/${date.getMonth()}/${date.getFullYear()}`;\n}\n\nconst ProjectList: React.FC = () => {\n    const [projects, setProjects] = useState<Project[]>([]);\n    const [loaded, setLoaded] = useState<boolean>(false);\n    const [preview, setPreview] = useState<Project | null>(null);\n\n    useEffect(() => {\n        setPreview(null);\n        getProjects().then((projectsData) => {\n            if (projectsData) {\n                setProjects(projectsData);\n            }\n            setLoaded(true);\n        });\n    }, []);\n\n    return (\n        <>\n            {!loaded && <div>Loading...</div>}\n            {loaded && !preview && <div className=\"ProjectList\">\n                {projects.map((project, i) => (\n                    <div key={i} className=\"project-card\">\n                        <h2>{project.name}</h2>\n                        <div className=\"date\">\n                            <p>Début</p>\n                            <p>{dateToString(project.startDate)}</p>\n                        </div>\n                        <div className=\"date\">\n                            <p>Fin</p>\n                            <p>{dateToString(project.endDate)}</p>\n                        </div>\n                        <div className=\"button\" onClick={() => {\n                            setPreview(project);\n                        }}>\n                            Aperçu\n                        </div>\n                        <div className=\"button\" onClick={() => {\n                            updateProject(project).then((projectsData) => {\n                                if (projectsData) {\n                                    setProjects(projectsData);\n                                }\n                            });\n                        }}>\n                            Fin\n                        </div>\n                    </div>\n                ))}\n                <Link to=\"/\" className=\"button\">\n                    <span>Retour</span>\n                </Link>\n            </div>}\n            {loaded && preview && <ProjectView project={preview} setProject={setPreview}/>}\n        </>\n    );\n};\n\nexport default ProjectList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}