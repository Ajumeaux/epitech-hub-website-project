{"ast":null,"code":"export const getProjects = async () => {\n  // return made up data composed of two projects\n  const project1 = {\n    _id: \"1\",\n    name: \"Project 1\",\n    startDate: new Date(),\n    endDate: new Date(),\n    isCompleted: false,\n    xp: 0,\n    workers: 0,\n    context: \"Context 1\",\n    goal: \"Goal 1\",\n    description: \"Description 1\",\n    steps: []\n  };\n  project1.steps.push({\n    name: \"Step 1\",\n    duration: 0,\n    xp: 0,\n    projectId: \"1\"\n  });\n  project1.steps.push({\n    name: \"Step 2\",\n    duration: 0,\n    xp: 0,\n    projectId: \"1\"\n  });\n  project1.steps.push({\n    name: \"Step 3\",\n    duration: 0,\n    xp: 0,\n    projectId: \"1\"\n  });\n  const project2 = {\n    _id: \"2\",\n    name: \"Project 2\",\n    startDate: new Date(),\n    endDate: new Date(),\n    isCompleted: false,\n    xp: 0,\n    workers: 0,\n    context: \"Context 2\",\n    goal: \"Goal 2\",\n    description: \"Description 2\",\n    steps: []\n  };\n  project2.steps.push({\n    name: \"Step 1\",\n    duration: 0,\n    xp: 0,\n    projectId: \"2\"\n  });\n  project2.steps.push({\n    name: \"Step 2\",\n    duration: 0,\n    xp: 0,\n    projectId: \"2\"\n  });\n  project2.steps.push({\n    name: \"Step 3\",\n    duration: 0,\n    xp: 0,\n    projectId: \"2\"\n  });\n  return [project1, project2];\n};\nexport const updateProject = async data => {\n  const newProject = {\n    _id: data.projectId,\n    name: data.name || \"\",\n    startDate: data.startDate || new Date(),\n    endDate: data.endDate || new Date(),\n    isCompleted: data.isCompleted || false,\n    xp: data.xp || 0,\n    workers: data.workers || 0,\n    context: data.context || \"\",\n    goal: data.goal || \"\",\n    description: data.description || \"\",\n    steps: []\n  };\n  return newProject;\n};","map":{"version":3,"names":["getProjects","project1","_id","name","startDate","Date","endDate","isCompleted","xp","workers","context","goal","description","steps","push","duration","projectId","project2","updateProject","data","newProject"],"sources":["/home/antoine/Documents/Epitech/epitech-hub-website-project/project-front/src/Api/TestApi.ts"],"sourcesContent":["import { Project } from '../Interfaces/Interfaces';\n\nexport const getProjects: () => Promise<Project[]> = async () => {\n    // return made up data composed of two projects\n    const project1: Project = {\n      _id: \"1\",\n      name: \"Project 1\",\n      startDate: new Date(),\n      endDate: new Date(),\n      isCompleted: false,\n      xp: 0,\n      workers: 0,\n      context: \"Context 1\",\n      goal: \"Goal 1\",\n      description: \"Description 1\",\n      steps: []\n    };\n    project1.steps.push({\n      name: \"Step 1\",\n      duration: 0,\n      xp: 0,\n      projectId: \"1\",\n    });\n    project1.steps.push({\n      name: \"Step 2\",\n      duration: 0,\n      xp: 0,\n      projectId: \"1\",\n    });\n    project1.steps.push({\n      name: \"Step 3\",\n      duration: 0,\n      xp: 0,\n      projectId: \"1\",\n    });\n  \n    const project2: Project = {\n      _id: \"2\",\n      name: \"Project 2\",\n      startDate: new Date(),\n      endDate: new Date(),\n      isCompleted: false,\n      xp: 0,\n      workers: 0,\n      context: \"Context 2\",\n      goal: \"Goal 2\",\n      description: \"Description 2\",\n      steps: []\n    };\n    project2.steps.push({\n      name: \"Step 1\",\n      duration: 0,\n      xp: 0,\n      projectId: \"2\",\n    });\n    project2.steps.push({\n      name: \"Step 2\",\n      duration: 0,\n      xp: 0,\n      projectId: \"2\",\n    });\n    project2.steps.push({\n      name: \"Step 3\",\n      duration: 0,\n      xp: 0,\n      projectId: \"2\",\n    });\n  \n    return [project1, project2];\n  };\n\n  export const updateProject = async (data : {\n    projectId: string,\n    name?: string,\n    startDate?: Date,\n    endDate?: Date,\n    isCompleted?: boolean,\n    xp?: number,\n    workers?: number,\n    context?: string,\n    goal?: string,\n    description?: string,\n}) => {\n    const newProject: Project = {\n        _id: data.projectId,\n        name: data.name || \"\",\n        startDate: data.startDate || new Date(),\n        endDate: data.endDate || new Date(),\n        isCompleted: data.isCompleted || false,\n        xp: data.xp || 0,\n        workers: data.workers || 0,\n        context: data.context || \"\",\n        goal: data.goal || \"\",\n        description: data.description || \"\",\n        steps: []\n    };\n    return newProject;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}