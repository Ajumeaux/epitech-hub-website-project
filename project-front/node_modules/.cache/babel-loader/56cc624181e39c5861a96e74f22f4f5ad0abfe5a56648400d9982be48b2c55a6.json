{"ast":null,"code":"export const getProjects = async () => {\n  // return made up data composed of two projects\n  const project1 = {\n    _id: \"1\",\n    name: \"Project 1\",\n    startDate: new Date(),\n    endDate: new Date(),\n    isCompleted: false,\n    xp: 0,\n    workers: 0,\n    context: \"Context 1\",\n    goal: \"Goal 1\",\n    description: \"Description 1\",\n    steps: []\n  };\n  project1.steps.push({\n    name: \"Step 1\",\n    duration: 0,\n    xp: 0,\n    projectId: \"1\"\n  });\n  project1.steps.push({\n    name: \"Step 2\",\n    duration: 0,\n    xp: 0,\n    projectId: \"1\"\n  });\n  project1.steps.push({\n    name: \"Step 3\",\n    duration: 0,\n    xp: 0,\n    projectId: \"1\"\n  });\n  const project2 = {\n    _id: \"2\",\n    name: \"Project 2\",\n    startDate: new Date(),\n    endDate: new Date(),\n    isCompleted: false,\n    xp: 0,\n    workers: 0,\n    context: \"Context 2\",\n    goal: \"Goal 2\",\n    description: \"Description 2\",\n    steps: []\n  };\n  project2.steps.push({\n    name: \"Step 1\",\n    duration: 0,\n    xp: 0,\n    projectId: \"2\"\n  });\n  project2.steps.push({\n    name: \"Step 2\",\n    duration: 0,\n    xp: 0,\n    projectId: \"2\"\n  });\n  project2.steps.push({\n    name: \"Step 3\",\n    duration: 0,\n    xp: 0,\n    projectId: \"2\"\n  });\n  return [project1, project2];\n};\nexport const updateProject = async data => {\n  try {\n    const response = await fetch(`${api_url}/updateProject`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': 'http://localhost/5000'\n      },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    return response.json();\n  } catch (error) {\n    console.error('There was an error updating the data', error);\n  }\n};","map":{"version":3,"names":["getProjects","project1","_id","name","startDate","Date","endDate","isCompleted","xp","workers","context","goal","description","steps","push","duration","projectId","project2","updateProject","data","response","fetch","api_url","method","headers","body","JSON","stringify","ok","Error","status","json","error","console"],"sources":["/home/antoine/Documents/Epitech/epitech-hub-website-project/project-front/src/Api/TestApi.ts"],"sourcesContent":["import { Project } from '../Interfaces/Interfaces';\n\nexport const getProjects: () => Promise<Project[]> = async () => {\n    // return made up data composed of two projects\n    const project1: Project = {\n      _id: \"1\",\n      name: \"Project 1\",\n      startDate: new Date(),\n      endDate: new Date(),\n      isCompleted: false,\n      xp: 0,\n      workers: 0,\n      context: \"Context 1\",\n      goal: \"Goal 1\",\n      description: \"Description 1\",\n      steps: []\n    };\n    project1.steps.push({\n      name: \"Step 1\",\n      duration: 0,\n      xp: 0,\n      projectId: \"1\",\n    });\n    project1.steps.push({\n      name: \"Step 2\",\n      duration: 0,\n      xp: 0,\n      projectId: \"1\",\n    });\n    project1.steps.push({\n      name: \"Step 3\",\n      duration: 0,\n      xp: 0,\n      projectId: \"1\",\n    });\n  \n    const project2: Project = {\n      _id: \"2\",\n      name: \"Project 2\",\n      startDate: new Date(),\n      endDate: new Date(),\n      isCompleted: false,\n      xp: 0,\n      workers: 0,\n      context: \"Context 2\",\n      goal: \"Goal 2\",\n      description: \"Description 2\",\n      steps: []\n    };\n    project2.steps.push({\n      name: \"Step 1\",\n      duration: 0,\n      xp: 0,\n      projectId: \"2\",\n    });\n    project2.steps.push({\n      name: \"Step 2\",\n      duration: 0,\n      xp: 0,\n      projectId: \"2\",\n    });\n    project2.steps.push({\n      name: \"Step 3\",\n      duration: 0,\n      xp: 0,\n      projectId: \"2\",\n    });\n  \n    return [project1, project2];\n  };\n\n  export const updateProject = async (data : {\n    projectId: string,\n    name?: string,\n    startDate?: Date,\n    endDate?: Date,\n    isCompleted?: boolean,\n    xp?: number,\n    workers?: number,\n    context?: string,\n    goal?: string,\n    description?: string,\n}) => {\n\n    try {\n        const response = await fetch(`${api_url}/updateProject`, {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin': 'http://localhost/5000',\n            },\n            body: JSON.stringify(data),\n        });\n\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        return response.json();\n    } catch (error) {\n        console.error('There was an error updating the data', error);\n    }\n}"],"mappings":"AAEA,OAAO,MAAMA,WAAqC,GAAG,MAAAA,CAAA,KAAY;EAC7D;EACA,MAAMC,QAAiB,GAAG;IACxBC,GAAG,EAAE,GAAG;IACRC,IAAI,EAAE,WAAW;IACjBC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC;IACrBC,OAAO,EAAE,IAAID,IAAI,CAAC,CAAC;IACnBE,WAAW,EAAE,KAAK;IAClBC,EAAE,EAAE,CAAC;IACLC,OAAO,EAAE,CAAC;IACVC,OAAO,EAAE,WAAW;IACpBC,IAAI,EAAE,QAAQ;IACdC,WAAW,EAAE,eAAe;IAC5BC,KAAK,EAAE;EACT,CAAC;EACDZ,QAAQ,CAACY,KAAK,CAACC,IAAI,CAAC;IAClBX,IAAI,EAAE,QAAQ;IACdY,QAAQ,EAAE,CAAC;IACXP,EAAE,EAAE,CAAC;IACLQ,SAAS,EAAE;EACb,CAAC,CAAC;EACFf,QAAQ,CAACY,KAAK,CAACC,IAAI,CAAC;IAClBX,IAAI,EAAE,QAAQ;IACdY,QAAQ,EAAE,CAAC;IACXP,EAAE,EAAE,CAAC;IACLQ,SAAS,EAAE;EACb,CAAC,CAAC;EACFf,QAAQ,CAACY,KAAK,CAACC,IAAI,CAAC;IAClBX,IAAI,EAAE,QAAQ;IACdY,QAAQ,EAAE,CAAC;IACXP,EAAE,EAAE,CAAC;IACLQ,SAAS,EAAE;EACb,CAAC,CAAC;EAEF,MAAMC,QAAiB,GAAG;IACxBf,GAAG,EAAE,GAAG;IACRC,IAAI,EAAE,WAAW;IACjBC,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC;IACrBC,OAAO,EAAE,IAAID,IAAI,CAAC,CAAC;IACnBE,WAAW,EAAE,KAAK;IAClBC,EAAE,EAAE,CAAC;IACLC,OAAO,EAAE,CAAC;IACVC,OAAO,EAAE,WAAW;IACpBC,IAAI,EAAE,QAAQ;IACdC,WAAW,EAAE,eAAe;IAC5BC,KAAK,EAAE;EACT,CAAC;EACDI,QAAQ,CAACJ,KAAK,CAACC,IAAI,CAAC;IAClBX,IAAI,EAAE,QAAQ;IACdY,QAAQ,EAAE,CAAC;IACXP,EAAE,EAAE,CAAC;IACLQ,SAAS,EAAE;EACb,CAAC,CAAC;EACFC,QAAQ,CAACJ,KAAK,CAACC,IAAI,CAAC;IAClBX,IAAI,EAAE,QAAQ;IACdY,QAAQ,EAAE,CAAC;IACXP,EAAE,EAAE,CAAC;IACLQ,SAAS,EAAE;EACb,CAAC,CAAC;EACFC,QAAQ,CAACJ,KAAK,CAACC,IAAI,CAAC;IAClBX,IAAI,EAAE,QAAQ;IACdY,QAAQ,EAAE,CAAC;IACXP,EAAE,EAAE,CAAC;IACLQ,SAAS,EAAE;EACb,CAAC,CAAC;EAEF,OAAO,CAACf,QAAQ,EAAEgB,QAAQ,CAAC;AAC7B,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,MAAOC,IAWrC,IAAK;EAEF,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEC,OAAQ,gBAAe,EAAE;MACrDC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,6BAA6B,EAAE;MACnC,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,IAAI;IAC7B,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACQ,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAE,uBAAsBT,QAAQ,CAACU,MAAO,EAAC,CAAC;IAC7D;IAEA,OAAOV,QAAQ,CAACW,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;EAChE;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}